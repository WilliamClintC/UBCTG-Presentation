# Introduction √† <i class="fab fa-r-project"></i>

## Installation de <i class="fab fa-r-project"></i> {.smaller}

Site internet officiel&nbsp;: <https://www.r-project.org/>

> R is a language and environment for statistical computing and graphics.
> It is a GNU project which is similar to the S language and environment which was developed at Bell Laboratories (formerly AT&T, now Lucent Technologies) by John Chambers and colleagues.
> R can be considered as a different implementation of S.
> There are some important differences, but much code written for S runs unaltered under R.
>
> R provides a wide variety of statistical (linear and nonlinear modelling, classical statistical tests, time-series analysis, classification, clustering, ...) and graphical techniques, and is highly extensible.
> The S language is often the vehicle of choice for research in statistical methodology, and R provides an Open Source route to participation in that activity.
>
> One of R's strengths is the ease with which well-designed publication-quality plots can be produced, including mathematical symbols and formulae where needed.
> Great care has been taken over the defaults for the minor design choices in graphics, but the user retains full control.

&rArr; [**Download R**](https://cloud.r-project.org/)

## Sauvegarder le code ...

### Pas l'environnement&nbsp;!

:::: {.columns}

::: {.column width="50%"}

Les scripts&nbsp;:

- "*standards*": `.R`.

- "*Rmarkdown*":`.Rmd`.

:::

::: {.column width="50%"}

Les "donn√©es"&nbsp;:

- "*objet*": `.rds`.

- "*liste d'objet*": `.Rdata`.

:::

::::

## Utiliser un IDE^["Integrated Development Environment"]

- RStudio&nbsp;:  
  <https://www.rstudio.com/products/rstudio/download/#download>

- Emacs + ESS&nbsp;:  
  <https://ess.r-project.org>

- vim + Nvim-R&nbsp;:  
  <https://medium.com/free-code-camp/turning-vim-into-an-r-ide-cd9602e8c217>

- Visual Studio Code + vscode-R&nbsp;:  
  <https://github.com/REditorSupport/vscode-R>

## Faire *table rase* √† chaque d√©marrage&nbsp;!

Lorsque vous quittez <i class="fab fa-r-project"></i>&nbsp;:

- Ne pas enregistrer votre espace de travail (*workspace*^[Le *workspace* est automatiquement sauvegard√©/charg√© via un fichier nomm√© `.Rdata` (l√† o√π s'ex√©cute <i class="fab fa-r-project"></i>).])&nbsp;!

Lorsque vous d√©marrez <i class="fab fa-r-project"></i>&nbsp;:

- Ne pas charger l'espace de travail sauvegard√© pr√©c√©demment&nbsp;!

## Faire *table rase*&nbsp;!

### Dans Windows

![](media/rwindows.png){fig-align="center"}

## Faire *table rase*&nbsp;!

### Dans RStudio (*Tools > Global options*)

![](media/rstudio.png){fig-align="center"}

## Faire *table rase*&nbsp;!

- Dans un Terminal.

```{.bash}
R --no-save --no-restore-data
```

- `.bash_profile` / `.bashrc` / ...

```{.bash}
alias R='R --no-save --no-restore-data'
```

##  Comment R√©initialiser <i class="fab fa-r-project"></i>&nbsp;? 

### Avec `rm(list = ls())`&nbsp;?

> If the first line of your R script is
>
> `rm(list = ls())`
>
> I will come into your office and SET YOUR COMPUTER ON FIRE üî•.
>
> --- Jenny Bryan

## Que ne fait pas `rm(list = ls())`&nbsp;?

- R√©initialiser la session <i class="fab fa-r-project"></i> en cours

- R√©initialiser les `options()`
  &#x2192; `options(stringsAsFactors = FALSE)`^[Valeur par d√©faut <i class="fab fa-r-project"></i> v4.0.0 ([Kurt Hornik: stringsAsFactors](https://developer.r-project.org/Blog/public/2020/02/16/stringsasfactors/)).]

- R√©initialiser le r√©pertoire de travail
  `getwd()` &#x2192; `setwd()`

- R√©initialiser les extensions <i class="fab fa-r-project"></i> attach√©es

## Alors que fait `rm(list = ls())`&nbsp;?

```{.r}
help(rm)
```

![](media/rm-doc.png){fig-align="center"}

## R√©initialiser <i class="fab fa-r-project"></i>

- Dans une console <i class="fab fa-r-project"></i>

  - Via le raccourci `Ctrl+D`.

  - Via la fonction `q()` dans une console <i class="fab fa-r-project"></i>.

## R√©initialiser <i class="fab fa-r-project"></i>

:::: {.columns}

::: {.column width="50%"}
- Dans RStudio&nbsp;:

  - Via le raccourci `Ctrl+Shift+F10`.

  - Via le menu.
:::

::: {.column width="50%"}
![](media/restartr.png){fig-align="center"}
:::

::::

## D√©sactiver les fichiers de d√©marrage

- `--vanilla`,  
  pour d√©sactiver le chargement de **tous les fichiers** de d√©marrage.

- `--no-init-file`,  
  pour d√©sactiver le chargement du fichier `.Rprofile`.

- `--no-environ`,  
  pour d√©sactiver le chargement du fichier `.Renviron`.

##  `setwd(...)` en premi√®re ligne ...

> If the first line of your R script is
>
> `setwd("C:\Users\jenny\path\that\only\I\have")`
>
> I will come into your office and SET YOUR COMPUTER ON FIRE üî•.
>
> --- Jenny Bryan

## Faisons le Point sur `setwd()`&nbsp;! {.smaller}

```{.r}
library(ggplot2)

setwd("/path/to/a/directory/on/my/laptop/data")

df <- read.delim("data.csv")

p <- ggplot(df, aes(x, y)) + geom_point()

ggsave("../figs/scatterplot.png")
```

</br>

```{.r}
library(ggplot2)

setwd("/path/to/a/directory/on/my/laptop/data")

df <- read.delim("data.csv")

p <- ggplot(df, aes(x, y)) + geom_point()

setwd("/path/to/a/directory/on/my/laptop/figs")

ggsave("scatterplot.png")
```

## L'extension <i class = "fab fa-r-project"></i> `here`

```{r}
#| echo: false
if (!file.exists(here::here("content/media/here_ahorst.png"))) {
  download.file(
    url = "https://github.com/allisonhorst/stats-illustrations/raw/master/rstats-artwork/here.png",
    destfile = here::here("media/here_ahorst.png")
  )
}
```

![](media/here_ahorst.png){fig-align="center" width=40%}

```{.r}
here::here()
here::i_am("radvanced.qmd")
here::i_am("content/content-01.qmd")
```

## Utiliser un Mode "Projet" via un IDE

- D√©marrer un projet A&nbsp;:

  1. D√©marre R.

  2. D√©fini le r√©petoire de travail de R comme la racine du projet A.

- Passer d'un projet A √† un project B&nbsp;:

  1. Red√©marre R.

  2. D√©fini le r√©petoire de travail de R comme la racine du projet B.

## Utiliser un Mode "Projet"

- [__"What They Forgot to Teach You About R"__](https://rstats.wtf/project-oriented-workflow.html)  
  --- Jenny Bryan & Jim Hester

- [__"Project-oriented Workflow"__](https://www.tidyverse.org/articles/2017/12/workflow-vs-script/)  
  --- Jenny Bryan

## Lectures Utiles

- [__"Code Smells and Feels"__](https://www.youtube.com/watch?v=7oyiPBjLAWY)  
  --- Jenny Bryan

- [__"Advanced R"__](https://adv-r.hadley.nz/)  
  --- Hadley Wickham

- [__"Project-oriented Workflow"__](https://www.tidyverse.org/articles/2017/12/workflow-vs-script/)  
  --- Jenny Bryan

- [__"R for Data Science"__](https://r4ds.had.co.nz/)  
  --- Garrett Grolemund & Hadley Wickham

- [__"What They Forgot to Teach You About R"__](https://rstats.wtf/)  
  --- Jenny Bryan & Jim Hester
